# remove unwanted stuff (apps, programs, games)
sudo apt purge gnome-mines gnome-sudoku gnome-mahjongg \
cheese aisleriot gnome-calendar thunderbird
# gnome-maps  gnome-photos gnome-weather
# #  gnome-books


# ======================================
# ======================================

# update system
sudo apt update
sudo apt upgrade

sudo apt install vim git curl

# ======================================

# get rid of games                          ****************
# get rid of Amazon                         ****************
# get rid of Thunderbird                    ****************

# ======================================

# copy /etc/NetworkManager/system-connections

# this will keep all 'remembered' networks available

# BUT, fix the MAC addresses
---

# Stop Network Manager
sudo /etc/init.d/network-manager stop

# copy the files from your old system (adapt as needed)
sudo rsync -va -c /media/$YOUR_OLD_SYSTEM/etc/NetworkManager/system-connections/ /etc/NetworkManager/system-connections/

# Get your new MAC address, and verify it is right.
# For example, this should work if you have only one wireless interface
export MAC=$(iw dev | grep addr | awk '{print $2}')
echo $MAC

# Replace the MAC address in all the system-connections files
sudo perl -i.bak -pe 's/^(mac-address=)(.*)/$1$ENV{MAC}/' /etc/NetworkManager/system-connections/*

# Restart NetworkManager, and wait for nm-applet to also start and connect
sudo /etc/init.d/network-manager start

# Delete the backup files with the old MAC addresses
sudo rm /etc/NetworkManager/system-connections/*.bak



# ======================================
# ======================================


oh-my-zsh -- . >

sudo apt install zsh curl git
chsh -s /bin/zsh

---
zsh configuration

-1

-1,1
histsize=20000
histfile= _default_
savehist=2000

0

-2,1

-3,1,v,0

-4,1,u,2,u,3,s,4,s,5,s,6,u,0
---

sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

vim ~/.zshrc
ZSH_THEME="af-magic" # approx. line 11



# ======================================
# ======================================

sudo apt install vim git

vim ~/.bashrc
source ~/.bash_profile
vim ~/.zshrc
source ~/.bash_profile


# ======================================
# ======================================

# created online first

cd existing_repo
git remote rename origin old-origin
git remote add origin https://magiccvs.byu.edu/gitlab/bradyka/dotfi.git
git push -u origin --all
git push -u origin --tags

# ======================================
# ======================================


# ======================================
# ======================================


# ======================================
# ======================================

# dotfiles      -->     from scratch
git init --bare $HOME/dots
alias dtsgit='/usr/bin/git --git-dir=$HOME/dots/ --work-tree=$HOME'
echo "alias dtsgit='/usr/bin/git --git-dir=$HOME/dots/ --work-tree=$HOME'" >> $HOME/.bash_profile


# ======================================

# install dotfi on new system (or migrate)

alias dtsgit='/usr/bin/git --git-dir=$HOME/dots/ --work-tree=$HOME'

echo '*\ndots\ndotshold' >> .gitignore

git clone --bare https://magiccvs.byu.edu/gitlab/bradyka/dotfi.git $HOME/dots

# not necessary ?
alias dtsgit='/usr/bin/git --git-dir=$HOME/dots/ --work-tree=$HOME'

dtsgit checkout

mkdir -p dotshold && \
dtsgit checkout 2>&1 | egrep '\s+\.' | awk {'print $1'} | \
xargs -I{} mv {} dotshold/{}

dtsgit checkout

---
dtsgit status
dtsgit add -f <filename>
dtsgit commit -m "<message>"
dtsgit push


# ======================================
# ======================================


# ======================================
# ======================================


# ======================================
# ======================================


# fix scroll wheel mouse button paste

vim ~/.Xmodmap
pointer = 1 0 3 4 5 6 7 8 9 10 11 12


# --> under the hood notes
#xinput list
#xinput get-button-map <id>
#xinput set-button-map <id> 1 0 3
# verify correct change
#xinput get-button-map <id>


#pointer = 1 0 3 4 5 6 7 8 ...
#pointer = 1 25 3 4 5 6 7 8 9



# ======================================
# ======================================

# fix the default bookmarks in nautilus sidebar
1) comment out unwanted in ~/.config/user-dirs.dirs
2) make or edit ~/.config/user-dirs.conf with line enabled=false


# ======================================
# ======================================


---
# for budgie...
vim /etc/default/tlp
# ~ line 245
DEVICES_TO_DISABLE_ON_STARTUP = 'bluetooth'


# ======================================
# ======================================

# programs to install
exfat-utils
exfat-fuse      --> read/write exfat formatted drives
htop            --> make task mgr (activity monitor) look good in terminal
vim             --> text editor
git
ssh
vlc
mesa-utils      --> graphics type stuff
mesa-utils-extra
build-essential --> gcc already installed, may need rest of build tools
manpages-dev    --> gcc already ...
libeigen3-dev   --> eigen library, math and lin algebra stuff
---
: NOTES :
libopenblas-dev --> implementation of optimized low level routines in lapacke
liblapacke-dev  --> (eigen) version of lapack, includes C wrappers for fortran lapack
(libatlas-base-dev) --> automatically tuned lin algebra software
---
tesseract-ocr
libtesseract-dev --> optical character recognition engine
libleptonica-dev --> broadly useful image processing library
libboost-all-dev --> NOTES c++ libs support math, multi-thread, image process, regex, unit testing
libtbb-dev      --> threading building blocks
ocl-icd-opencl-dev --> opencl development files (installable client driver)
ocl-icd-libopencl1 --> Generic OpenCL ICD Loader
opencl-headers
clinfo          --> query opencl system information
libffi6
libffi-dev      --> Foreign Function Interface library
gcc             --> gnu c compiler
cmake           --> will install 'make' (see below)
pybind11-dev    --> pybind dependency for pyopencl pip package
ghostscript-x   --> pdf and secure pdf stuff (needed especially for matlab export_fig)

libdbus-1-dev   --> necessary for pip dbus-python for pip python-networkmanager



# === maybes
git_install_lfs                 --> large file storage
libeigen-stl-containers-dev     --> ROS ? wrapper for eigen
ocl-icd-dev                     --> Development files to build a ICD Loader
mesa-opencl-icd                 --> free implementation of the OpenCL API -- ICD runtime
mesa-common-dev --> documentation only ??
beignet-opencl-icd              --> OpenCL library for Intel GPUs
boinc-client-opencl             --> metapackage for AMD/ATI OpenCL-savvy BOINC client and manager
---
libc6-dev       --> gcc extension-ish, gnu c library dev libs and head files
libc-dev        --> virtual package provided by libc6-dev
autoconf        --> automatic configure script builder
automake        --> tool for generating GNU standards copmliant makefiles
bison           --> probably not
flex            --> fast lexical analyzer generator
gcc-multilib    --> gcc multilib files
gdb             --> gnu debugger
libtool         --> generic library support script
make            --> utility for directing compilation
---
libglu1-mesa
libglu1-mesa-dev --> Mesa OpenGL utility library -- development files
mesa-va-drivers     --> intel
mesa-vdpau-drivers  --> nvidia
mesa-vulkan-drivers -->
libgles2        --> vendor neutral GL dispatch library
libgles2-mesa
libgles2-mesa-dev --> free implementation of the OpenGL|ES 2.x API
---
vtk6
libvtk6-dev ( libvtk5-dev ? )
libvtk6.3       ( NOTES )
---
libgtk2.0-dev
libgtk-3-dev
pkg-config
---
doxygen
doxygen-latex
---
xpdf    --> for matlab's export_fig
libcanberra-gtk-module      --> for matlab



# === probably nots
libv4l-dev
v4l-utils
libv4l-0
libv4lconvert0
---
libgtkglextmm-x11-1.2-dev # or just get gcc 7.0
libgtkglextmm-x11-1.2-0v5
libgtkglext1
libgtkglext1-dev
libgtkgl2.0-dev
libgtkgl2.0-1



# === NO install
[]-udeb         --> these are intended for the use in building debian-installer images only. Do not install it on a normal Ubuntu system

# ==================

sudo apt install


NOTES:

lib open blas and lapacke: ( may be necessary )
sudo ln -s /usr/include/lapacke.h /usr/include/openblas/

boost:
# /usr/include/boost and libraries in /usr/lib/x86_64-linux-gnu
# or /usr/lib/i386-linux-gnu

vtk:
https://github.com/opencv/opencv/issues/9953
https://stackoverflow.com/questions/20328991/can-cmake-findblas-find-openblas




# ======================================
# ======================================

# personalize grub
sudo vim /etc/default/grub
sudo update-grub


# ======================================
# ======================================

# intel specific performance enhancements
-already have tbb from main ubuntu packages repos
math kernel library
integrated performance primitives

# from ~~ppa repo
software.intel.com/en-us/articles/free-ipsxe-tools-and-libraries
software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo

# pip packages
pip uninstall numpy scipy -y
pip install intel-numpy intel-scipy (mkl_fft, mkl_random)


# ======================================
# ======================================

# -- python    --->>   first, get python manager, pip

/*
Also please note that this keeps the old packaged
versions installed through apt-get or libvtk6any other
package manager, but adds new versions which have
nothing to do with the system packages. The
pip-installed packages will be preferred, but you
should not remove the apt-get-installed ones either,
because the package manager can't know that any pip
version is installed otherwise.
*/

sudo apt install python-dev python3-dev python-pip python3-pip python3-tk

pip2 install --upgrade pip setuptools wheel --user
pip3 install --upgrade pip setuptools wheel --user

---
pip2 install
ipython
numpy
scipy
pygame
vtk
matplotlib
......pyqt
pyside2
mako
pybind11
pyopencl
jinja2
pytesseract
tesserocr
jupyter --user

---
pip3 install
ipython
numpy
scipy
pybind11
pygame
vtk
matplotlib
pyqt5
pyside2
mako
pyopencl
jinja2
pytesseract
tesserocr
jupyter --user

testresources ??

dbus-python
python-networkmanager --user
# webpy


# === maybe
pip3 install gym posix_ipc --user  --> ( holodeck )

torch
torchvision
tqdm


# -- 2 --
#python-pyopencl

# -- 3 --
#python3-pyopencl

# -- tkinter and matplotlib (no python3-tk)
import matplotlib
matplotlib.use('agg')
import matplotlib.pyplot as plt
# no interaction with plot (apparently)


# ======================================

https://www.scipy.org/scipylib/faq.html


which python(2)(3)
whereis python

# ====================

from <module> import <functions_I_need>
# -or-
import <module>


# ======================================
# ======================================




# ======================================
# ======================================

# Git

git config --global user.name "Brady Anderson"
git config --global user.email "brady.engineer@gmail.com"

git config --global core.editor vim
git config --global alias.subup submodule update --init --recursive


# ======================================

# change remote url for https  <---> ssh
git remote set-url origin <link>

# add : remove remote
git remote <add/remove> INCOMPLETE

# (blank) repo exists on server
git remote add -u origin INCOMPLETE


# ======================================
# ======================================




# ======================================
# ======================================

# virtual machine with vmware

# for core, then for copy/paste sharing
sudo apt install open-vm-tools open-vm-tools-desktop

# for file sharing, create folder vmshare
vmhgfs-fuse ~/vmshare


# ======================================
# ======================================

# cmake


sudo apt install cmake
https://askubuntu.com/questions/829310/how-to-upgrade-cmake-in-ubuntu


# ======================================

sudo mkdir /opt/cmake
cd ~/software/makinc
wget https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh

chmod +x /path/to/cmake-3.10.2( -->tab complete)
# (chmod makes the script executable)

sudo sh /path/to/cmake-3.10.2( -->tab complete) --prefix=/opt/cmake
#(you'll need to press y twice)

#The script (with included --prefix flag) installs to /opt/cmake, so in order to get the cmake command, make a symbolic link:

#optional sudo mkdir /usr/local/bin/cmake
sudo ln -s /opt/cmake/bin/* /usr/local/bin( /cmake optional )
#optional pre-pend to bash_profile export PATH="/usr/local/bin/cmake:${PATH}"

Test your results with cmake --version

# ======================================

# for make files
https://www.cs.swarthmore.edu/~newhall/unixhelp/howto_makefiles.html

https://askubuntu.com/questions/433943/how-to-clean-executable-using-make-clean


# ======================================
# ======================================

# chrome    --->>   use wget/curl?
cd software/google/
sudo dpkg -i </path/to/>google-chrome-stable_current_amd64.deb
# watch for chrome-gnome-shell EXTENSION!!!
sudo apt install -f


# ======================================
# ======================================

# atom

# add official package repo to system
curl -sL https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
sudo apt update

# install with apt
sudo apt install atom


-->
https://askubuntu.com/questions/435603/desktop-files-how-to-specify-the-icon-path?rq=1


sudo vim /usr/share/applications/atom.desktop
# Icon=atom
Icon=~/software/atomtxt/atom.png

# packages to install
linter (steelbrain)
    -linter-ui-default (steelbrain)
    -intentions (steelbrain)
    -busy-signal (steelbrain)
linter-matlab (ajdm)
language-matlab-only (alpsayin)
git-time-machine (littlebee)
fonts (braver)
highlight-selected (richrace)
split-diff (mupchrch)
git-diff-details (samu)
teletype (atom)
find-scroll-marker
lint-scroll-marker
scroll-marker


pdf-view (izuzak)
language-latex


# with Atom latex-tools possibly need <okular>
# with Atom possibly need pdf-view package
# alternatively look into latex, atom-latex, ... packages

# mlint
/usr/local/MATLAB/R2017b/bin/glnxa64


# ======================================

# LaTeX
sudo apt install texlive

# figure out syncTex!


texlive --> (syncTex??)


find . -name 'fi*.txt' -type f -exec bash -c 'cp "/home/latis/software/fi-re.txt" "$1"' -- {} \;

# ======================================
# ======================================




# ======================================
# ======================================

# I C O N S

cd /usr/share/icons/Moka

find . -name 'google-chrome.png' -type f -exec bash -c 'sudo ln -sf "/home/brady/software/google/google-chrome.svg" "$1"' -- {} \;

find . -name 'atom.png' -type f -exec bash -c 'sudo ln -sf "/home/brady/software/atomtxt/atom.svg" "$1"' -- {} \;


# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

# MATLAB
cd software/matlab/matlab_R2017b_glnxa64/
sudo ./install

# create symbolic links in  --->>
/usr/local/bin/matlabb17

# look in file /software/matlab/realDesktop.txt

# https://developer.gnome.org/integration-guide/stable/desktop-files.html.en
# /usr/share/applications
# ~/.local/share/applications

# add to PATH in .bash_profile
export PATH="${PATH}:/usr/local/bin/matlabb17"


---
export_fig
https://www.mathworks.com/matlabcentral/fileexchange/23629-export_fig
github altmany

---
matlab18a.desktop in /usr/share/applications/

[Desktop Entry]
Name=MATLAB 18a
Exec=/usr/local/bin/matlaba18/matlab -desktop -useStartupFolderPref
Icon=/usr/share/icons/matlab_logo.png
Type=Application
Categories=Development;
StartupWMClass=MATLAB 18a
# MimeType=m;fig;slx;
# /usr/local/MATLAB/R2018a/bin/glnxa64/cef_resources/matlab_icon.png
# /etc/mime.types
# ---

# Encoding=UTF-8
# Version=1.0
# Path=/usr/local/MATLAB/R2018a/bin
# Exec=/usr/local/MATLAB/R2018a/bin/glnxa64/MATLAB (-desktop?)
# StartupNotify=true
# StartupWMClass=MATLAB R2018a - academic use
# OnlyShowIn=Unity;
# X-UnityGenerated=true
# X-Desktop-File-Install-Version=0.22
Name[en_US]=matlab18a.desktop_template


---
---
---

# matlab command window
userpath('/home/brady/software/matlab/modules')



---
---

--> bad libs

# libs shipped with matlab are 'bad'
# move them out of default install path s.t. system libs are used.

# https://www.mathworks.com/matlabcentral/answers/364551-why-is-matlab-unable-
# to-run-the-matlabwindow-application-on-linux?s_tid=gn_loc_drop


mkdir ~/software/matlab/bad_libs

sudo mv /usr/local/MATLAB/R2017b/sys/os/glnxa64/libstdc++.so.6* ~/software/matlab/bad_libs

# sudo mv /usr/local/MATLAB/R2017b/cefclient/sys/os/glnxa64/libglib-2.0.so 
# sudo mv /usr/local/MATLAB/R2017b/cefclient/sys/os/glnxa64/libglib-2.0.so.0
# sudo mv /usr/local/MATLAB/R2017b/cefclient/sys/os/glnxa64/libglib-2.0.so.0.4200.2

sudo mv /usr/local/MATLAB/R2017b/cefclient/sys/os/glnxa64/libglib-2.0.so* ~/software/matlab/bad_libs

#






# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

# ros install

sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116

sudo apt update

sudo apt install ros-melodic-desktop-full

sudo rosdep init
rosdep update

echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc (or ~/.zshrc)
source ~/.bashrc

sudo apt install python3-catkin-pkg-modules
sudo apt install python3-rospkg-modules



# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

# holodeck ( byu )

mkdir ~/Documents/hdecksoft
cd ~/Documents/hdecksoft
git clone https://github.com/byu-pccl/HolodeckPythonBinding

cd HolodeckPythonBinding
python3 install.py

# add to .bash_profile
export HOLODECKPATH="/usr/local/Holodeck"
export PYTHONPATH="${HOLODECKPATH}:${PYTHONPATH}"

# test
from Holodeck import Holodeck
env = Holodeck.make( "MazeWorld" )

# -opengl3 flag
( "world", Holodeck.GL_VERSION.OPENGL3 )



# ======================================
# ======================================

# air sim ( microsoft )

# --> first, unreal engine 4
mkdir ~/software/ue4
cd ~/software/ue4
git clone https://github.com/EpicGames/UnrealEngine.git

# --> get air sim repos
mkdir airVer
git clone -b 4.17 https://github.com/EpicGames/UnrealEngine.git
cd UnrealEngine/
git checkout af96417313a908b20621a443175ba91683c238c8



# ======================================
# ======================================




# ======================================
# ======================================

# disable auto discover printer
sudo vim /etc/avahi/avahi-daemon.conf # and changing the these lines to "no":
use-ipv4=no
use-ipv6=no

sudo vim /etc/cups/cups-browsed.conf
BrowseRemoteProtocols none


# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

CAN DO WITH gnome-tweaks
sudo apt update

# fix desktop 'spaces' on all monitors connected
gsettings set org.gnome.shell.overrides workspaces-only-on-primary false
# turn off animations
gsettings set org.gnome.desktop.interface enable-animations false

# initiate shrink of title bars, and header bar
cd .config/gtk-3.0/
touch gtk.css
# find sister file --> gtk_css.txt

# change size of tab bar in terminal
# https://stackoverflow.com/questions/36869701/ \
# decrease-the-tabs-bar-height-in-gnome-terminal


# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

# https://blog.scottlowe.org/2016/11/21/gnome-keyring-git-credential-helper/

# gnome keyring for git with https repos
sudo apt install libgnome-keyring-dev

cd /usr/share/doc/git/contrib/credential/gnome-keyring
sudo make

# edit ~/.gitconfig
# [credential]
# helper = /usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring

# =================================

# ssh keygen

# need xclip
sudo apt install xclip

ssh-keygen -t rsa -C "brady.engineer@gmail.com" -b 4096

# use default path by <enter>

>> <password>
# change with
# ssh-keygen -p <keyname>

# copy public key

# linux # or copy from file in text editor
xclip -sel clip < ~/.ssh/id_rsa.pub
# mac
pbcopy < ~/.ssh/id_rsa.pub
# git bash on windows
cat ~/.ssh/id_rsa.pub | clip

# paste into gitlab
# test with ->
ssh -T git@magiccvs.byu.edu


# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

# homework

cd ~/Documents/me634/
git clone https://magiccvs.byu.edu/gitlab/bradyka/mavhw.git
git checkout smlnk

cd ../ec631/
git clone https://magiccvs.byu.edu/gitlab/bradyka/visionhw.git
git checkout nohdeck


# ======================================
# ======================================




# ======================================
# ======================================




# ======================================
# ======================================

wrong ? --> just need headers, and tell CmakeLists.txt where they are

# eigen
# sym link to /usr/local/include



~Documents/software/eigenRepo/

git clone https://github.com/eigenteam/ebashrcigen-git-mirror

eigenRepo/eigenbuild

cmake ../eigen-git-mirror

make doc

sudo make install


file:///home/brady/Documents/software/eigenRepo/eigenbuild/doc/html/index.html


# ======================================
# ======================================




# ======================================
# ======================================

# get rid of guest log-in option            ****************
# ( enter on one line )

sudo sh -c 'printf "[Seat:*]\nallow-guest=false\n" \
>/etc/lightdm/lightdm.conf.d/50-no-guest.conf'

# remove guest
sudo rm /etc/lightdm/lightdm.conf.d/50-no-guest.conf


# ======================================
# ======================================

# to allow easier passwords, remove the
# word <obscure > from line 25 temporarily

/etc/pam.d/common-password


# ======================================
# ======================================


# coding style guide
# https://users.ece.cmu.edu/~eno/coding/CppCodingStandard.html


# ======================================
# ======================================

# expand partition with gparted live cd/usb
https://blog.mwpreston.net/2012/06/22/expanding-a-linux-disk-with-gparted-and-
getting-swap-out-of-the-way/


# ======================================
# ======================================

# grep stuff
cd /desired/folder/directory
grep -irn 'stuff to search for' . #(don't forget the period, for pwd)

#


# ======================================
# ======================================

# draw.io for figures (gdrive plugin)


# ======================================
# ======================================

#opengl version
glxinfo | grep 'version'


# ======================================
# ======================================

https://itsfoss.com/best-gnome-extensions/


# ======================================
# ======================================

https://www.nuxified.org/blog/easy-linux-backup-software-time-machine-functionality/
time shift for system files
cronopete
back in time
https://blog.interlinked.org/tutorials/rsync_time_machine.html
rsync from command line


# ======================================
# ======================================

# disable auto-expansion
http://strugglers.net/~andy/blog/2017/12/14/disabling-edge-tiling-on-gnome-3-26/


# ======================================
# ======================================

apple magic mouse

http://sneclacson.blogspot.com/2016/09/ \
using-apple-magic-mouse-with-ubuntu-1604.html


# ======================================
# ======================================




# ======================================
# ======================================

# switch speakers left and right

vim /etc/pulse/default.pa

load-module module-remap-sink sink_name=reverse-stereo master=0 channels=2 master_channel_map=front-right,front-left channel_map=front-left,front-right
set-default-sink reverse-stereo

pulseaudio -k
pulseaudio --start

# You can also omit "set-default-sink" line above and select the reversed
# output in the sound settings dialog when you need it.


# ======================================
# ======================================




# ======================================
# ======================================

# make folder for chrome extensions and unused apps
gsettings set org.gnome.desktop.app-folders folder-children "['Utilities', \
'Sundry', 'chrExt', 'noUse']"


# ======================================

https://wiki.gnome.org/HowDoI/AppFolders
chrome-apps.directory

gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/chrExt/ name 'chrExt'


gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/chrExt/ categories "['chrome-apps']"
apps \
"['chrome-aohghmighlieiainnegkcijnfilokake-Default.desktop', \
'chrome-aohghmighlieiainnegkcijnfilokake-Profile_1.desktop', \
'chrome-aohghmighlieiainnegkcijnfilokake-Profile_2.desktop', \
'chrome-apdfllckaahabafndbhieahigkjlhalf-Default.desktop', \
'chrome-apdfllckaahabafndbhieahigkjlhalf-Profile_1.desktop', \
'chrome-apdfllckaahabafndbhieahigkjlhalf-Profile_2.desktop', \
'chrome-becloognjehhioodmnimnehjcibkloed-Default.desktop', \
'chrome-blpcfgokakmgnkcojhhkbfbldkacnbeo-Default.desktop', \
'chrome-blpcfgokakmgnkcojhhkbfbldkacnbeo-Profile_1.desktop', \
'chrome-blpcfgokakmgnkcojhhkbfbldkacnbeo-Profile_2.desktop', \
'chrome-fahmaaghhglfmonjliepjlchgpgfmobi-Default.desktop', \
'chrome-gbchcmhmhahfdphkhkmpfmihenigjmpp-Default.desktop', \
'chrome-gdijeikdkaembjbdobgfkoidjkpbmlkd-Default.desktop', \
'chrome-hfhhnacclhffhdffklopdkcgdhifgngh-Default.desktop', \
'chrome-hmjkmjkepdijhoojdojkdfohbdgmmhki-Default.desktop', \
'chrome-joodangkbfjnajiiifokapkpmhfnpleo-Default.desktop', \
'chrome-knipolnnllmklapflnccelgolnpehhpl-Default.desktop', \
'chrome-ndjpildffkeodjdaeebdhnncfhopkajk-Default.desktop', \
'chrome-odjaaghiehpobimgdjjfofmablbaleem-Default.desktop', \
'chrome-ohmmkhmmmpcnpikjeljgnaoabkaalbgc-Default.desktop', \
'chrome-pjkljhegncpnkpknbcohdijeoejaedia-Default.desktop', \
'chrome-pjkljhegncpnkpknbcohdijeoejaedia-Profile_1.desktop', \
'chrome-pjkljhegncpnkpknbcohdijeoejaedia-Profile_2.desktop']"

# ======================================

gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/noUse/ name 'noUse'

gsettings set org.gnome.desktop.app-folders.folder:/org/gnome/desktop/app-folders/folders/noUse/ categories "['Office', 'Science', 'Graphics', 'AudoVideo']"
apps \
"['brasero.desktop', \
'org.gnome.Contacts.desktop', \
'empathy.desktop', \
'evolution.desktop', \
'gnome-music.desktop', \
'im-config.desktop', \
'rhythmbox.desktop', \
'simple-scan.desktop', \
'org.gnome.Software.desktop', \
'update-manager.desktop', \
'software-properties-gnome.desktop', \
'transmission-gtk.desktop', \
'totem.desktop', \
'libreoffice-calc.desktop', \
'libreoffice-draw.desktop', \
'libreoffice-impress.desktop', \
'libreoffice-math.desktop', \
'libreoffice-writer.desktop', \
'libreoffice-startcenter.desktop']"

# calendar
evolution-calendar.desktop
'org.gnome.Calendar.desktop', \
# software and update
software-properties-gtk.desktop
# videos
org.gnome.totem.desktop
'org.gnome.Photos.desktop', \
'org.gnome.Weather.Application.desktop', \



# ======================================
# ======================================




# ======================================
# ======================================




https://docs.opencv.org/master/d7/d9f/tutorial_linux_install.html

https://magiccvs.byu.edu/wiki/#!sw_guides/python.md

https://docs.opencv.org/3.3.1/d4/db1/tutorial_documentation.html

https://dvsaraiva.wordpress.com/2015/06/13/build-opencv-3-0-gold-edition/

https://docs.opencv.org/master/dd/dd5/tutorial_py_setup_in_fedora.html

https://www.learnopencv.com/install-opencv3-on-ubuntu/

https://unix.stackexchange.com/questions/26047/ \
how-to-correctly-add-a-path-to-path

https://superuser.com/questions/183870/ \
difference-between-bashrc-and-bash-profile/183980#183980




N E T W O R K I N G

elinux.org/Jetson/Remote_Access

radar01
---ethernet---
device: default_wired...
---ipv4---
manual
169.254.8.171
255.255.255.0

def                     = 20
latis5                  = 13
latis2                  = 12
'Maritime Landing 2.4'  = 10
MAGICC                  = 8
moffatash               = 6
jssdand                 = 4
eduroam                 = 0

magicc_mothership_2.4

# edit /etc/NetworkManager/system-connections/<ssid>

# in [connections]
# autoconnect-priority: 10
autoconnect-priority=10



thunderbolt
https://askubuntu.com/questions/1052380/no-thunderbolt-3-support-ubuntu-18-04
apt install bolt

https://www.google.com/search?q=ubuntu+budgie+doesn%27t+recognize+thunderbolt+device&oq=ubuntu+budgie+doesn%27t+recognize+thunderbolt+device&aqs=chrome..69i57.8756j0j1&sourceid=chrome&ie=UTF-8




# ======================================
# ======================================


# check if microcode loaded
dmesg | grep microcode

# check partition types, UUIDs, etc
df -Th

lsblk -f
lsblk -o +uuid,name
lsblk --help

sudo blkid
sudo blkid -s UUID -o value /dev/sdXY




# ======================================
# ======================================

Setup radar filesystem (old Wumbo Linux)

1. Use partitioner on SD card, create 2 partitions:
   * boot - filesystem: fat32, size: ~300MB, flags: type, label: boot
   * root - filesystem: ext3, size: all remaining space, flags: type, label: root

2. Lay down images (change destination device accordingly):
   * boot - command:  fsarchiver restfs radar_p1_boot.fsa id=0,dest=/dev/mmcblk0p1 -v 
   * root - command:  fsarchiver restfs radar_p2_root.fsa id=0,dest=/dev/mmcblk0p2 -v 

   
=========================
To save new file systems (change destination device accordingly):

* boot - command:  fsarchiver savefs radar_p1_boot.fsa /dev/mmcblk0p1 -j2 -v
* root - command:  fsarchiver savefs radar_p2_root.fsa /dev/mmcblk0p2 -j2 -v







#

